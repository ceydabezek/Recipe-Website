{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nconst useFetch = function (url) {\n  _s();\n  let method = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"GET\";\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [options, setOptions] = useState(null);\n  const postData = data => {\n    setOptions({\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      try {\n        let response;\n        if (method === \"GET\") {\n          response = await fetch(url);\n        } else if (method === \"POST\" && options) {\n          response = await fetch(url, options);\n        } else {\n          throw new Error(\"Geçersiz method: \" + method);\n        }\n        if (!response.ok) {\n          throw new Error(response.statusText);\n        }\n        const responseData = await response.json();\n        setIsLoading(false);\n        setData(responseData);\n      } catch (err) {\n        setIsLoading(false);\n        setError(err.message);\n        console.log(err.message);\n      }\n    };\n    fetchData();\n  }, [url, options, method]);\n  return {\n    data,\n    isLoading,\n    error,\n    postData\n  };\n};\n_s(useFetch, \"9YHTEPcLjUzYQR1/NzymB2iA+ss=\");\nexport default useFetch;","map":{"version":3,"names":["useState","useEffect","useFetch","url","_s","method","arguments","length","undefined","data","setData","error","setError","isLoading","setIsLoading","options","setOptions","postData","headers","body","JSON","stringify","fetchData","response","fetch","Error","ok","statusText","responseData","json","err","message","console","log"],"sources":["C:/Users/CEYDA/Desktop/yemek-tarifleri/src/hooks/useFetch.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst useFetch = (url, method = \"GET\") => {\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [options, setOptions] = useState(null);\n\n  const postData = (data) => {\n    setOptions({\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n\n      try {\n        let response;\n        if (method === \"GET\") {\n          response = await fetch(url);\n        } else if (method === \"POST\" && options) {\n          response = await fetch(url, options);\n        } else {\n          throw new Error(\"Geçersiz method: \" + method);\n        }\n\n        if (!response.ok) {\n          throw new Error(response.statusText);\n        }\n        const responseData = await response.json();\n        setIsLoading(false);\n        setData(responseData);\n      } catch (err) {\n        setIsLoading(false);\n        setError(err.message);\n        console.log(err.message);\n      }\n    };\n\n    fetchData();\n\n  }, [url, options, method]);\n\n  return {\n    data,\n    isLoading,\n    error,\n    postData,\n  };\n};\n\nexport default useFetch;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,QAAQ,GAAG,SAAAA,CAACC,GAAG,EAAqB;EAAAC,EAAA;EAAA,IAAnBC,MAAM,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,KAAK;EACnC,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMiB,QAAQ,GAAIR,IAAI,IAAK;IACzBO,UAAU,CAAC;MACTX,MAAM,EAAE,MAAM;MACda,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,IAAI;IAC3B,CAAC,CAAC;EACJ,CAAC;EAEDR,SAAS,CAAC,MAAM;IACd,MAAMqB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5BR,YAAY,CAAC,IAAI,CAAC;MAElB,IAAI;QACF,IAAIS,QAAQ;QACZ,IAAIlB,MAAM,KAAK,KAAK,EAAE;UACpBkB,QAAQ,GAAG,MAAMC,KAAK,CAACrB,GAAG,CAAC;QAC7B,CAAC,MAAM,IAAIE,MAAM,KAAK,MAAM,IAAIU,OAAO,EAAE;UACvCQ,QAAQ,GAAG,MAAMC,KAAK,CAACrB,GAAG,EAAEY,OAAO,CAAC;QACtC,CAAC,MAAM;UACL,MAAM,IAAIU,KAAK,CAAC,mBAAmB,GAAGpB,MAAM,CAAC;QAC/C;QAEA,IAAI,CAACkB,QAAQ,CAACG,EAAE,EAAE;UAChB,MAAM,IAAID,KAAK,CAACF,QAAQ,CAACI,UAAU,CAAC;QACtC;QACA,MAAMC,YAAY,GAAG,MAAML,QAAQ,CAACM,IAAI,EAAE;QAC1Cf,YAAY,CAAC,KAAK,CAAC;QACnBJ,OAAO,CAACkB,YAAY,CAAC;MACvB,CAAC,CAAC,OAAOE,GAAG,EAAE;QACZhB,YAAY,CAAC,KAAK,CAAC;QACnBF,QAAQ,CAACkB,GAAG,CAACC,OAAO,CAAC;QACrBC,OAAO,CAACC,GAAG,CAACH,GAAG,CAACC,OAAO,CAAC;MAC1B;IACF,CAAC;IAEDT,SAAS,EAAE;EAEb,CAAC,EAAE,CAACnB,GAAG,EAAEY,OAAO,EAAEV,MAAM,CAAC,CAAC;EAE1B,OAAO;IACLI,IAAI;IACJI,SAAS;IACTF,KAAK;IACLM;EACF,CAAC;AACH,CAAC;AAACb,EAAA,CArDIF,QAAQ;AAuDd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}